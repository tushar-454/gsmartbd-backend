openapi: 3.0.0
info:
  version: '1.0.0'
  title: GSmartBD | A Multi Vendor Ecommerce Platform API's
  description: 'GSmartBD is a multi vendor ecommerce platform. This API documentation is for the backend of the platform. The API is built using Node.js, Express.js, MongoDB, and Mongoose.'
  contact:
    name: Auroraxia
    url: https://auroraxia.com/
    email: auroraxiaofficial@gmail.com
servers:
  - description: Dev
    url: 'http://localhost:3000/api/v1'
  - description: Production
    url: 'https://gsmartbd.com/api/v1'

tags:
  - name: Auth
  - name: Admin
  - name: Blog
  - name: Cart
  - name: Category
  - name: Collection
  - name: Comment
  - name: Coupon
  - name: Customer
  - name: Discount
  - name: Order
  - name: Product
  - name: Reels
  - name: Review
  - name: Transaction
  - name: Merchant

paths:
  # Auth api start
  '/auth/superadmin/register':
    post:
      tags:
        - Auth
      summary: Create a new admin
      description: Create a new admin account, only superadmin can create admin account and superadmin can create superadmin account also by passing role as superadmin in the request body and superadmin can create admin account by passing role as admin in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the admin/superadmin
                  example: Admin
                email:
                  type: string
                  format: email
                  description: Email of the admin/superadmin
                  example: admin@gmail.com
                password:
                  type: string
                  description: Password of the admin/superadmin
                  example: password
                role:
                  type: string
                  description: Role of the admin/superadmin
                  example: admin
                status:
                  type: string
                  description: Status of the admin/superadmin
                  example: active
                  default: active
                permissions:
                  type: array
                  description: Permissions of the admin/superadmin
                  items:
                    type: string
                    example: ['create', 'read', 'update', 'delete']
              required: ['name', 'email', 'password', 'role']
      responses:
        '201':
          description: Admin/superadmin created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 201
                  message:
                    type: string
                    description: Message of the response
                    example: Admin/superadmin created successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the admin/superadmin
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the admin/superadmin
                        example: Admin
                      email:
                        type: string
                        format: email
                        description: Email of the admin/superadmin
                        example: admin@gmail.com
                      role:
                        type: string
                        description: Role of the admin/superadmin
                        example: admin
                      status:
                        type: string
                        description: Status of the admin/superadmin
                        example: active
                      permissions:
                        type: array
                        description: Permissions of the admin/superadmin
                        items:
                          type: string
                          example: ['create', 'read', 'update', 'delete']
                      lastLogin:
                        type: string
                        format: date-time
                        description: Last login of the admin/superadmin
                        example: 2021-09-01T00:00:00.000Z
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/admin/login':
    post:
      tags:
        - Auth
      summary: Login a admin/superadmin
      description: Login a admin/superadmin account by passing email and password in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the admin/superadmin
                  example: superadmin@gmail.com
                password:
                  type: string
                  description: Password of the admin/superadmin
                  example: password
              required: ['email', 'password']
      responses:
        '200':
          description: Admin/superadmin logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Admin/superadmin logged in successfully
                  data:
                    type: object
                    description: Data of the admin login response
                    properties:
                      _id:
                        type: string
                        description: Id of the admin/superadmin
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the admin/superadmin
                        example: Admin
                      email:
                        type: string
                        format: email
                        description: Email of the admin/superadmin
                        example: superadmin@gmail.com
                      role:
                        type: string
                        description: Role of the admin/superadmin
                        example: superadmin
                      status:
                        type: string
                        description: Status of the admin/superadmin
                        example: active
                      permissions:
                        type: array
                        description: Permissions of the admin/superadmin
                        items:
                          type: string
                          example: ['create', 'read', 'update', 'delete']
                      lastLogin:
                        type: string
                        format: date-time
                        description: Last login of the admin/superadmin
                        example: 2021-09-01T00:00:00.000Z
                  token:
                    type: string
                    description: Token of the admin/superadmin
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMmY3YjNiN2IzYjNiM2IzYjNiM2IzYjMiLCJpYXQiOjE2MzA0NjQwNzQsImV4cCI6MTYzMDQ2NzY3NH0.7

        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/merchant/register':
    post:
      tags:
        - Auth
      summary: Register a new merchant account
      description: Register a new merchant account by passing name/shopName, email, password in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the merchant/shopname
                  example: Mini store
                email:
                  type: string
                  format: email
                  description: Email of the merchant
                  example: merchant@gmail.com
                phone:
                  type: string
                  description: Phone of the merchant
                  example: 01712345678
                password:
                  type: string
                  description: Password of the merchant
                  example: password
              required: ['name', 'email', 'phone', 'password']
      responses:
        '201':
          description: Merchant registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 201
                  message:
                    type: string
                    description: Message of the response
                    example: Merchant registered successfully
                  data:
                    type: object
                    description: Data of the merchant account creation response
                    properties:
                      _id:
                        type: string
                        description: Id of the merchant
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the merchant
                        example: Mini store
                      email:
                        type: string
                        format: email
                        description: Email of the merchant
                        example: merchant@gmail.com
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/merchant/login':
    post:
      tags:
        - Auth
      summary: Login a merchant
      description: Login a merchant account by passing email and password in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the merchant
                  example: merchant@gmail.com
                password:
                  type: string
                  description: Password of the merchant
                  example: password
              required: ['email', 'password']
      responses:
        '200':
          description: Merchant logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Merchant logged in successfully
                  data:
                    type: object
                    description: Data of the merchant login response
                    properties:
                      _id:
                        type: string
                        description: Id of the merchant
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      merchantId:
                        type: string
                        description: Merchant id of the merchant
                        example: GSBD-3043
                      name:
                        type: string
                        description: Name of the merchant
                        example: Mini store
                      email:
                        type: string
                        format: email
                        description: Email of the merchant
                        example: merchant@gmail.com
                      phone:
                        type: string
                        description: Phone of the merchant
                        example: 01712345678
                      status:
                        type: string
                        description: Status of the merchant
                        example: disabled

                  token:
                    type: string
                    description: Token of the merchant
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMmY3YjNiN2IzYjNiM2IzYjNiM2IzYjMiLCJpYXQiOjE2MzA0NjQwNzQsImV4cCI6MTYzMDQ2NzY3NH0.7
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/customer/register':
    post:
      tags:
        - Auth
      summary: Register a new customer account
      description: Register a new customer account by passing name, email, password in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the customer
                  example: John Doe
                email:
                  type: string
                  format: email
                  description: Email of the customer
                  example: customer@gmail.com
                phone:
                  type: string
                  description: Phone of the customer
                  example: 01712345678
                password:
                  type: string
                  description: Password of the customer
                  example: password
              required: ['name', 'email', 'phone', 'password']
      responses:
        '201':
          description: Customer registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 201
                  message:
                    type: string
                    description: Message of the response
                    example: Customer registered successfully
                  data:
                    type: object
                    description: Data of the customer account creation response
                    properties:
                      _id:
                        type: string
                        description: Id of the customer
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the customer
                        example: John Doe
                      email:
                        type: string
                        format: email
                        description: Email of the customer
                        example: customer@gmail.com
                      phone:
                        type: string
                        description: Phone of the customer
                        example: 01712345678

        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/customer/login':
    post:
      tags:
        - Auth
      summary: Login a customer
      description: Login a customer account by passing email and password in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the customer
                  example: customer@gmail.com
                password:
                  type: string
                  description: Password of the customer
                  example: password
              required: ['email', 'password']
      responses:
        '201':
          description: Customer registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 201
                  message:
                    type: string
                    description: Message of the response
                    example: Customer registered successfully
                  data:
                    type: object
                    description: Data of the customer account creation response
                    properties:
                      _id:
                        type: string
                        description: Id of the customer
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the customer
                        example: John Doe
                      email:
                        type: string
                        format: email
                        description: Email of the customer
                        example: customer@gmail.com
                      phone:
                        type: string
                        description: Phone of the customer
                        example: 01712345678
                      status:
                        type: string
                        description: Status of the customer
                        example: active
                  token:
                    type: string
                    description: Token of the customer
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMmY3YjNiN2IzYjNiM2IzYjNiM2IzYjMiLCJpYXQiOjE2MzA0NjQwNzQsImV4cCI6MTYzMDQ2NzY3NH0.7
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/logout':
    post:
      tags:
        - Auth
      security:
        - bearerAuth: []
      summary: Logout a customer / merchant / admin / superadmin
      description: Logout a customer / merchant / admin / superadmin by passing token in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Token of the user
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMmY3YjNiN2IzYjNiM2IzYjNiM2IzYjMiLCJpYXQiOjE2MzA0NjQwNzQsImV4cCI6MTYzMDQ2NzY3NH0.7
              required: ['token']
      responses:
        '200':
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Logged out successfully
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/forgot-password':
    post:
      tags:
        - Auth
      summary: forgot password of a user
      description: forgot password of a user by passing email in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the user
                  example: forgotemail@gmail.com
              required: ['email']
      responses:
        '200':
          description: Email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Email sent successfully
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/reset-password':
    post:
      tags: []
      summary: Register a new superadmin/admin
      description: Register a new user
      requestBody:
        content: {}
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/change-password':
    post:
      tags:
        - Auth
      security:
        - bearerAuth: []
      summary: change password of a user
      description: change password of a user by passing email, oldPassword, newPassword in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the user
                  example: usermail@gmail.com
                oldPassword:
                  type: string
                  description: Old password of the user
                  example: oldpassword
                newPassword:
                  type: string
                  description: New password of the user
                  example: newpassword
              required: ['email', 'oldPassword', 'newPassword']
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Password changed successfully
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/auth/verify-email':
    post:
      tags:
        - Auth
      security:
        - bearerAuth: []
      summary: Verify email of a customer / merchant
      description: Verify email of a customer / merchant by passing token and email in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Email of the user
                  example: verifyemail@gmail.com
                token:
                  type: string
                  description: Token of the user
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMmY3YjNiN2IzYjNiM2IzYjNiM2IzYjMiLCJpYXQiOjE2MzA0NjQwNzQsImV4cCI6MTYzMDQ2NzY3NH0.7
              required: ['email', 'token']
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Email verified successfully'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # super admin api start
  '/superadmin/{id}':
    get:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get a superadmin by id
      description: Get a superadmin by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the superadmin
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Superadmin found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Superadmin found successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the superadmin
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the superadmin
                        example: Admin
                      email:
                        type: string
                        format: email
                        description: Email of the superadmin
                        example: superadmin@gmail.com
                      role:
                        type: string
                        description: Role of the superadmin
                        example: superadmin
                      status:
                        type: string
                        description: Status of the superadmin
                        example: active
                      permissions:
                        type: array
                        description: Permissions of the superadmin
                        items:
                          type: string
                          example: ['create', 'read', 'update', 'delete']
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Update a superadmin by id
      description: Update a superadmin by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the superadmin
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the superadmin
                  example: Admin
                password:
                  type: string
                  description: Password of the superadmin
                  example: password
              required: ['name', 'password']
      responses:
        '200':
          description: Superadmin updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Superadmin found successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the superadmin
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the superadmin
                        example: Admin
                      email:
                        type: string
                        format: email
                        description: Email of the superadmin
                        example: superadmin@gmail.com
                      role:
                        type: string
                        description: Role of the superadmin
                        example: superadmin
                      status:
                        type: string
                        description: Status of the superadmin
                        example: active
                      permissions:
                        type: array
                        description: Permissions of the superadmin
                        items:
                          type: string
                          example: ['create', 'read', 'update', 'delete']
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/superadmin/admin':
    get:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get all admin
      description: Get all superadmins and admins
      responses:
        '200':
          description: Admins found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Admins found successfully
                  data:
                    type: array
                    description: Data of the response
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Id of the admin/superadmin
                          example: 612f7b3b7b3b3b3b3b3b3b3b
                        name:
                          type: string
                          description: Name of the admin/superadmin
                          example: Admin
                        email:
                          type: string
                          format: email
                          description: Email of the admin/superadmin
                          example: admin@gmail.com
                        role:
                          type: string
                          description: Role of the admin/superadmin
                          example: admin
                        status:
                          type: string
                          description: Status of the admin/superadmin
                          example: active
                        permissions:
                          type: array
                          description: Permissions of the admin/superadmin
                          items:
                            type: string
                            example: ['create', 'read', 'update', 'delete']
                        lastLogin:
                          type: string
                          format: date-time
                          description: Last login of the admin/superadmin
                          example: 2021-09-01T00:00:00.000Z

        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Create a new admin
      description: Create a new admin account, only superadmin can create admin account and superadmin can create superadmin account also by passing role as superadmin in the request body and superadmin can create admin account by passing role as admin in the request body.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the admin/superadmin
                  example: Admin
                email:
                  type: string
                  format: email
                  description: Email of the admin/superadmin
                  example: admin@gmail.com
                password:
                  type: string
                  description: Password of the admin/superadmin
                  example: password
                role:
                  type: string
                  description: Role of the admin/superadmin
                  example: admin
                status:
                  type: string
                  description: Status of the admin/superadmin
                  example: active
                  default: active
                permissions:
                  type: array
                  description: Permissions of the admin/superadmin
                  items:
                    type: string
                    example: ['create', 'read', 'update', 'delete']
              required: ['name', 'email', 'password', 'role']
      responses:
        '201':
          description: Admin/superadmin created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 201
                  message:
                    type: string
                    description: Message of the response
                    example: Admin/superadmin created successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the admin/superadmin
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the admin/superadmin
                        example: Admin
                      email:
                        type: string
                        format: email
                        description: Email of the admin/superadmin
                        example: admin@gmail.com
                      role:
                        type: string
                        description: Role of the admin/superadmin
                        example: admin
                      status:
                        type: string
                        description: Status of the admin/superadmin
                        example: active
                      permissions:
                        type: array
                        description: Permissions of the admin/superadmin
                        items:
                          type: string
                          example: ['create', 'read', 'update', 'delete']
                      lastLogin:
                        type: string
                        format: date-time
                        description: Last login of the admin/superadmin
                        example: 2021-09-01T00:00:00.000Z
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  '/superadmin/admin/{id}':
    get:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get an admin by id
      description: Get an admin by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the admin
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Admin found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Admin found successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the admin
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the admin
                        example: Admin
                      email:
                        type: string
                        format: email
                        description: Email of the admin
                        example: admin@gmail.com
                      role:
                        type: string
                        description: Role of the admin
                        example: admin
                      status:
                        type: string
                        description: Status of the admin
                        example: active
                      permissions:
                        type: array
                        description: Permissions of the admin
                        items:
                          type: string
                          example: ['create', 'read', 'update', 'delete']
                      lastLogin:
                        type: string
                        format: date-time
                        description: Last login of the admin
                        example: 2021-09-01T00:00:00.000Z
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Update an admin by id
      description: Update an admin by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the admin
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the admin
                  example: Admin
                email:
                  type: string
                  format: email
                  description: Email of the admin
                  example: admin@gmail.com
                password:
                  type: string
                  description: Password of the admin
                  example: password
                role:
                  type: string
                  description: Role of the admin
                  example: admin
                status:
                  type: string
                  description: Status of the admin
                  example: active
                permissions:
                  type: array
                  description: Permissions of the admin
                  items:
                    type: string
                    example: ['create', 'read', 'update', 'delete']
              required:
                ['name', 'email', 'password', 'role', status, permissions]
      responses:
        '200':
          description: Admin updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Admin updated successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the admin
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the admin
                        example: Admin
                      email:
                        type: string
                        format: email
                        description: Email of the admin
                        example: admin@gmail.com
                      role:
                        type: string
                        description: Role of the admin
                        example: admin
                      status:
                        type: string
                        description: Status of the admin
                        example: active
                      permissions:
                        type: array
                        description: Permissions of the admin
                        items:
                          type: string
                          example: ['create', 'read', 'update', 'delete']
                      lastLogin:
                        type: string
                        format: date-time
                        description: Last login of the admin
                        example: 2021-09-01T00:00:00.000Z
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Delete an admin by id
      description: Delete an admin by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the admin
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Admin deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Admin deleted successfully
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  # admin api start
  '/admin/merchants':
    get:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get all merchants
      description: Admin Get all merchants
      responses:
        '200':
          description: Merchants found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Merchants found successfully
                  data:
                    type: array
                    description: Data of the response
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Id of the merchant
                          example: 612f7b3b7b3b3b3b3b3b3b3b
                        name:
                          type: string
                          description: Name of the merchant
                          example: Mini store
                        email:
                          type: string
                          format: email
                          description: Email of the merchant
                          example: merchant@gmail.com
                        merchantId:
                          type: string
                          description: Merchant id of the merchant
                          example: GSBD-3043
                        phone:
                          type: string
                          description: Phone of the merchant
                          example: 01712345678
                        status:
                          type: string
                          description: Status of the merchant
                          example: disabled
                        tag:
                          type: array
                          description: Tag of the merchant
                          items:
                            type: string
                            example: 'tag1'
                        note:
                          type: array
                          description: Note of the merchant
                          items:
                            type: string
                            example: 'note1'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Create a new merchant
      description: Admin Create a new merchant
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the merchant/shopname
                  example: Mini store
                email:
                  type: string
                  format: email
                  description: Email of the merchant
                  example: merchant@gmail.com
                phone:
                  type: string
                  description: Phone of the merchant
                  example: 01712345678
                password:
                  type: string
                  description: Password of the merchant
                  example: password
                status:
                  type: string
                  description: Status of the merchant
                  enum: ['active', 'disabled']
                  example: active
                  default: active
              required: ['name', 'email', 'phone', 'password', 'status']
      responses:
        '201':
          description: Merchant registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 201
                  message:
                    type: string
                    description: Message of the response
                    example: Merchant registered successfully
                  data:
                    type: object
                    description: Data of the merchant account creation response
                    properties:
                      _id:
                        type: string
                        description: Id of the merchant
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the merchant
                        example: Mini store
                      email:
                        type: string
                        format: email
                        description: Email of the merchant
                        example: merchant@gmail.com
                      phone:
                        type: string
                        description: Phone of the merchant
                        example: 01712345678
                      status:
                        type: string
                        description: Status of the merchant
                        example: active
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  '/admin/merchants/{id}':
    get:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the merchant
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Merchant found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Merchant found successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the merchant
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the merchant
                        example: Mini store
                      email:
                        type: string
                        format: email
                        description: Email of the merchant
                        example: merchant@gmail.com
                      phone:
                        type: string
                        description: Phone of the merchant
                        example: 01712345678
                      status:
                        type: string
                        description: Status of the merchant
                        example: disabled
                      merchantId:
                        type: string
                        description: Merchant id of the merchant
                        example: GSBD-3043
                      products:
                        type: array
                        description: Products of the merchant
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              description: Id of the product
                              example: 612f7b3b7b3b3b3b3b3b3b3b
                            name:
                              type: string
                              description: Name of the product
                              example: Product 1
                      address:
                        type: object
                        description: Address of the merchant
                        properties:
                          district:
                            type: string
                            description: District of the merchant
                            example: Dhaka
                          address1:
                            type: string
                            description: Street of the merchant
                            example: 123, ABC street
                          address2:
                            type: string
                            description: Street of the merchant
                            example: 123, ABC street
                      website:
                        type: string
                        description: Website of the merchant
                        example: www.merchant.com
                      description:
                        type: string
                        description: Description of the merchant
                        example: This is a merchant
                      logo:
                        type: string
                        description: Logo of the merchant
                        example: logo.png
                      social_media:
                        type: object
                        description: Social media of the merchant
                        properties:
                          facebook:
                            type: string
                            description: Facebook link of the merchant
                            example: www.facebook.com/merchant
                      tags:
                        type: array
                        description: Tags of the merchant
                        items:
                          type: string
                          example: 'tag1'
                      notes:
                        type: array
                        description: Notes of the merchant
                        items:
                          type: string
                          example: 'note1'
                      verification_info:
                        type: object
                        description: Verification info of the merchant
                        properties:
                          national_id:
                            type: string
                            description: National id of the merchant
                            example: 1234567890123456
                          business_license:
                            type: string
                            description: Business license of the merchant
                            example: 1234567890123456
                          trade_license:
                            type: string
                            description: Trade license of the merchant
                            example: 1234567890123456

        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Update a merchant by id
      description: Update a merchant by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the merchant
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the merchant
                  example: Mini store
                email:
                  type: string
                  format: email
                  description: Email of the merchant
                  example: merchant@gmail.com
                phone:
                  type: string
                  description: Phone of the merchant
                  example: 01712345678
                status:
                  type: string
                  description: Status of the merchant
                  example: disabled
                merchantId:
                  type: string
                  description: Merchant id of the merchant
                  example: GSBD-3043
                products:
                  type: array
                  description: Products of the merchant
                  items:
                    type: string
                    description: Id of the product
                    example: 612f7b3b7b3b3b3b3b3b3b3b
                address:
                  type: object
                  description: Address of the merchant
                  properties:
                    district:
                      type: string
                      description: District of the merchant
                      example: Dhaka
                    address1:
                      type: string
                      description: Street of the merchant
                      example: 123, ABC street
                    address2:
                      type: string
                      description: Street of the merchant
                      example: 123, ABC street
                website:
                  type: string
                  description: Website of the merchant
                  example: www.merchant.com
                description:
                  type: string
                  description: Description of the merchant
                  example: This is a merchant
                logo:
                  type: string
                  description: Logo of the merchant
                  example: logo.png
                social_media:
                  type: object
                  description: Social media of the merchant
                  properties:
                    facebook:
                      type: string
                      description: Facebook link of the merchant
                      example: www.facebook.com/merchant
                tags:
                  type: array
                  description: Tags of the merchant
                  items:
                    type: string
                    example: 'tag1'
                notes:
                  type: array
                  description: Notes of the merchant
                  items:
                    type: string
                    example: 'note1'
                verification_info:
                  type: object
                  description: Verification info of the merchant
                  properties:
                    national_id:
                      type: string
                      description: National id of the merchant
                      example: 1234567890123456
                    business_license:
                      type: string
                      description: Business license of the merchant
                      example: 1234567890123456
                    trade_license:
                      type: string
                      description: Trade license of the merchant
                      example: 1234567890123456
              required:
                [
                  'name',
                  'email',
                  'phone',
                  'status',
                  'merchantId',
                  'products',
                  'address',
                  'website',
                  'description',
                  'logo',
                  'social_media',
                  'tags',
                  'notes',
                  'verification_info',
                ]

      responses:
        '200':
          description: Merchant updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: Id of the merchant
                    example: 612f7b3b7b3b3b3b3b3b3b3b
                  name:
                    type: string
                    description: Name of the merchant
                    example: Mini store
                  email:
                    type: string
                    format: email
                    description: Email of the merchant
                    example: merchant@gmail.com
                  phone:
                    type: string
                    description: Phone of the merchant
                    example: 01712345678
                  status:
                    type: string
                    description: Status of the merchant
                    example: disabled
                  merchantId:
                    type: string
                    description: Merchant id of the merchant
                    example: GSBD-3043
                  products:
                    type: array
                    description: Products of the merchant
                    items:
                      type: string
                      description: Id of the product
                      example: 612f7b3b7b3b3b3b3b3b3b3b
                  address:
                    type: object
                    description: Address of the merchant
                    properties:
                      district:
                        type: string
                        description: District of the merchant
                        example: Dhaka
                      address1:
                        type: string
                        description: Street of the merchant
                        example: 123, ABC street
                      address2:
                        type: string
                        description: Street of the merchant
                        example: 123, ABC street
                  website:
                    type: string
                    description: Website of the merchant
                    example: www.merchant.com
                  description:
                    type: string
                    description: Description of the merchant
                    example: This is a merchant
                  logo:
                    type: string
                    description: Logo of the merchant
                    example: logo.png
                  social_media:
                    type: object
                    description: Social media of the merchant
                    properties:
                      facebook:
                        type: string
                        description: Facebook link of the merchant
                        example: www.facebook.com/merchant
                  tags:
                    type: array
                    description: Tags of the merchant
                    items:
                      type: string
                      example: 'tag1'
                  notes:
                    type: array
                    description: Notes of the merchant
                    items:
                      type: string
                      example: 'note1'
                  verification_info:
                    type: object
                    description: Verification info of the merchant
                    properties:
                      national_id:
                        type: string
                        description: National id of the merchant
                        example: 1234567890123456
                      business_license:
                        type: string
                        description: Business license of the merchant
                        example: 1234567890123456
                      trade_license:
                        type: string
                        description: Trade license of the merchant
                        example: 1234567890123456
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Delete a merchant by id
      description: Delete a merchant by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the merchant
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Merchant deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Merchant deleted successfully
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/admin/customers':
    get:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get all customer account
      description: Get all customer account
      responses:
        '200':
          description: Customers found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Customers found successfully
                  data:
                    type: array
                    description: Data of the response
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Id of the customer
                          example: 612f7b3b7b3b3b3b3b3b3b3b
                        name:
                          type: string
                          description: Name of the customer
                          example: Customer 1
                        email:
                          type: string
                          format: email
                          description: Email of the customer
                          example: customer@gmail.com
                        phone:
                          type: string
                          description: Phone of the customer
                          example: 01712345678
                        status:
                          type: string
                          description: Status of the customer
                          example: active
                        orders_count:
                          type: number
                          description: Orders count of the customer
                          example: 10
                        points:
                          type: number
                          description: Points of the customer
                          example: 100
                        pointsAmount:
                          type: number
                          description: Points amount of the customer
                          example: 1000
                        totalSpent:
                          type: number
                          description: Total spent of the customer
                          example: 10000
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Create a new customer account
      description: Create a new customer account
      requestBody:
        description: Customer account creation request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the customer
                  example: Customer 1
                email:
                  type: string
                  format: email
                  description: Email of the customer
                  example: customer@gmail.com
                phone:
                  type: string
                  description: Phone of the customer
                  example: 01712345678
                password:
                  type: string
                  description: Password of the customer
                  example: password
      responses:
        '201':
          description: Customer registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 201
                  message:
                    type: string
                    description: Message of the response
                    example: Customer registered successfully
                  data:
                    type: object
                    description: Data of the customer account creation response
                    properties:
                      _id:
                        type: string
                        description: Id of the customer
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the customer
                        example: John Doe
                      email:
                        type: string
                        format: email
                        description: Email of the customer
                        example: customer@gmail.com
                      phone:
                        type: string
                        description: Phone of the customer
                        example: 01712345678
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  '/admin/customers/{id}':
    get:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get a customer by id
      description: Get a customer by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the customer
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Customer found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Customer found successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the customer
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the customer
                        example: John Doe
                      email:
                        type: string
                        format: email
                        description: Email of the customer
                        example: customer@gmail.com
                      phone:
                        type: string
                        description: Phone of the customer
                        example: 01712345678
                      status:
                        type: string
                        description: Status of the customer
                        example: active
                      addresses:
                        type: array
                        description: Addresses of the customer
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                              description: Address of the address
                              example: 123, ABC street
                            address2:
                              type: string
                              description: Address of the address
                              example: 123, ABC street
                            city:
                              type: string
                              description: City of the address
                              example: Dhaka
                            district:
                              type: string
                              description: District of the address
                              example: Dhaka
                            zip:
                              type: string
                              description: Zip of the address
                              example: 1205
                            type:
                              type: string
                              description: Type of the address
                              example: shipping
                      lastOrderId:
                        type: string
                        description: Last order id of the customer
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      lastOrderName:
                        type: string
                        description: Last order name of the customer
                        example: Order 1
                      notes:
                        type: array
                        description: Notes of the customer
                        items:
                          type: string
                          example: 'note1'
                      orderCount:
                        type: number
                        description: Order count of the customer
                        example: 10
                      points:
                        type: number
                        description: Points of the customer
                        example: 100
                      pointsAmount:
                        type: number
                        description: Points amount of the customer
                        example: 1000
                      tags:
                        type: array
                        description: Tags of the customer
                        items:
                          type: string
                          example: 'tag1'
                      totalSpent:
                        type: number
                        description: Total spent of the customer
                        example: 10000

        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Update a customer by id
      description: Update a customer by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the customer
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the customer
                  example: John Doe
                email:
                  type: string
                  format: email
                  description: Email of the customer
                  example: customer@gmail.com
                password:
                  type: string
                  description: Password of the customer
                  example: password
                phone:
                  type: string
                  description: Phone of the customer
                  example: 01712345678
                status:
                  type: string
                  description: Status of the customer
                  example: active
                addresses:
                  type: array
                  description: Addresses of the customer
                  items:
                    type: object
                    properties:
                      address:
                        type: string
                        description: Address of the address
                        example: 123, ABC street
                      address2:
                        type: string
                        description: Address of the address
                        example: 123, ABC street
                      city:
                        type: string
                        description: City of the address
                        example: Dhaka
                      district:
                        type: string
                        description: District of the address
                        example: Dhaka
                      zip:
                        type: string
                        description: Zip of the address
                        example: 1205
                      type:
                        type: string
                        description: Type of the address
                        example: shipping
                lastOrderId:
                  type: string
                  description: Last order id of the customer
                  example: 612f7b3b7b3b3b3b3b3b3b3b
                lastOrderName:
                  type: string
                  description: Last order name of the customer
                  example: Order 1
                notes:
                  type: array
                  description: Notes of the customer
                  items:
                    type: string
                    example: 'note1'
                orderCount:
                  type: number
                  description: Order count of the customer
                  example: 10
                points:
                  type: number
                  description: Points of the customer
                  example: 100
                pointsAmount:
                  type: number
                  description: Points amount of the customer
                  example: 1000
                tags:
                  type: array
                  description: Tags of the customer
                  items:
                    type: string
                    example: 'tag1'
                totalSpent:
                  type: number
                  description: Total spent of the customer
                  example: 10000
      responses:
        '200':
          description: Customer update successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Customer update successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the customer
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      name:
                        type: string
                        description: Name of the customer
                        example: John Doe
                      email:
                        type: string
                        format: email
                        description: Email of the customer
                        example: customer@gmail.com
                      phone:
                        type: string
                        description: Phone of the customer
                        example: 01712345678
                      status:
                        type: string
                        description: Status of the customer
                        example: active
                      addresses:
                        type: array
                        description: Addresses of the customer
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                              description: Address of the address
                              example: 123, ABC street
                            address2:
                              type: string
                              description: Address of the address
                              example: 123, ABC street
                            city:
                              type: string
                              description: City of the address
                              example: Dhaka
                            district:
                              type: string
                              description: District of the address
                              example: Dhaka
                            zip:
                              type: string
                              description: Zip of the address
                              example: 1205
                            type:
                              type: string
                              description: Type of the address
                              example: shipping
                      lastOrderId:
                        type: string
                        description: Last order id of the customer
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      lastOrderName:
                        type: string
                        description: Last order name of the customer
                        example: Order 1
                      notes:
                        type: array
                        description: Notes of the customer
                        items:
                          type: string
                          example: 'note1'
                      orderCount:
                        type: number
                        description: Order count of the customer
                        example: 10
                      points:
                        type: number
                        description: Points of the customer
                        example: 100
                      pointsAmount:
                        type: number
                        description: Points amount of the customer
                        example: 1000
                      tags:
                        type: array
                        description: Tags of the customer
                        items:
                          type: string
                          example: 'tag1'
                      totalSpent:
                        type: number
                        description: Total spent of the customer
                        example: 10000

        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Delete a customer by id
      description: Delete a customer by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the customer
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Customer deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Customer deleted successfully
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  '/admin/bulk-action/merchants':
    put:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Update merchants by ids
      description: Update merchants status for disabled/inactive/softdelete by ids
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: Ids of the merchants
                  items:
                    type: string
                  example:
                    ['612f7b3b7b3b3b3b3b3b3b3b', '612f7b3b7b3b3b3b3b3b3b3b']
                status:
                  type: string
                  description: Status of the merchants
                  enum: ['active', 'inactive', 'delete']
                  example: disabled
              required: ['ids', 'status']
      responses:
        '200':
          description: Merchants updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Merchants updated successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      updatedIds:
                        type: array
                        description: Updated ids of the merchants
                        items:
                          type: string
                          example: '612f7b3b7b3b3b3b3b3b3b3b'
                      notFoundIds:
                        type: array
                        description: Not found ids of the merchants
                        items:
                          type: string
                          example: '612f7b3b7b3b3b3b3b3b3b3b'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Delete merchants by ids
      description: Delete merchants by ids
      requestBody:
        description: Merchant delete request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: Ids of the merchants
                  items:
                    type: string
                  example:
                    ['612f7b3b7b3b3b3b3b3b3b3b', '612f7b3b7b3b3b3b3b3b3b3b']
              required: ['ids']
      responses:
        '200':
          description: Merchants deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Merchants deleted successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      deletedIds:
                        type: array
                        description: Deleted ids of the merchants
                        items:
                          type: string
                          example: '612f7b3b7b3b3b3b3b3b3b3b'
                      notFoundIds:
                        type: array
                        description: Not found ids of the merchants
                        items:
                          type: string
                          example: '612f7b3b7b3b3b3b3b3b3b3b'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/admin/bulk-action/customers':
    put:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Get customers by ids
      description: Get customers by ids
      requestBody:
        description: Customer get request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: Ids of the customers
                  items:
                    type: string
                  example:
                    ['612f7b3b7b3b3b3b3b3b3b3b', '612f7b3b7b3b3b3b3b3b3b3b']
                status:
                  type: string
                  description: Status of the customers
                  enum: ['active', 'inactive', 'delete']
                  example: disabled
              required: ['ids', status]
      responses:
        '200':
          description: Customers update successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Customers updated successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      updatedIds:
                        type: array
                        description: Updated ids of the customers
                        items:
                          type: string
                          example: '612f7b3b7b3b3b3b3b3b3b3b'
                      notFoundIds:
                        type: array
                        description: Not found ids of the customers
                        items:
                          type: string
                          example: '612f7b3b7b3b3b3b3b3b3b3b'

        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Admin
      security:
        - bearerAuth: []
      summary: Delete customers by ids
      description: Delete customers by ids
      requestBody:
        description: Customer delete request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: Ids of the customers
                  items:
                    type: string
                  example:
                    ['612f7b3b7b3b3b3b3b3b3b3b', '612f7b3b7b3b3b3b3b3b3b3b']
              required: ['ids']
      responses:
        '200':
          description: Customers deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Customers deleted successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      deletedIds:
                        type: array
                        description: Deleted ids of the customers
                        items:
                          type: string
                          example: '612f7b3b7b3b3b3b3b3b3b3b'
                      notFoundIds:
                        type: array
                        description: Not found ids of the customers
                        items:
                          type: string
                          example: '612f7b3b7b3b3b3b3b3b3b3b'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  # Blog api start
  '/blogs':
    get:
      tags:
        - Blog
      security:
        - bearerAuth: []
      summary: Get all blogs admin
      description: Get all blogs admin
      responses:
        '200':
          description: Blogs found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Blogs found successfully
                  data:
                    type: array
                    description: Data of the response
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Id of the blog
                          example: 612f7b3b7b3b3b3b3b3b3b3b
                        title:
                          type: string
                          description: Title of the blog
                          example: Blog 1
                        bodyHtml:
                          type: string
                          description: Description of the blog
                          example: <h1>This is a blog</h1>
                        tags:
                          type: array
                          description: Tags of the blog
                          items:
                            type: string
                            example: 'tag1'
                        author:
                          type: object
                          description: Author of the blog
                          properties:
                            name:
                              type: string
                              description: Name of the author
                              example: John Doe
                            email:
                              type: string
                              format: email
                              description: Email of the author
                              example: author@gmail.com
                            bio:
                              type: string
                              description: Bio of the author
                              example: This is a author
                            socialMedia:
                              type: object
                              description: Social media of the author
                              properties:
                                facebook:
                                  type: string
                                  description: Facebook link of the author
                                  example: www.facebook.com/author
                            vendorId:
                              type: string
                              description: Vendor id of the author
                              example: 612f7b3b7b3b3b3b3b3b3b3b
                            status:
                              type: string
                              description: Status of the author
                              example: active
                            publishedAt:
                              type: string
                              description: Published at of the author
                              example: 2021-09-01T00:00:00.000Z
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Blog
      security:
        - bearerAuth: []
      summary: Create a new blog
      description: Create a new blog
      requestBody:
        description: Blog creation request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the blog
                  example: Blog 1
                bodyHtml:
                  type: string
                  description: Description of the blog
                  example: <h1>This is a blog</h1>
                tags:
                  type: array
                  description: Tags of the blog
                  items:
                    type: string
                    example: 'tag1'
                author:
                  type: object
                  description: Author of the blog
                  properties:
                    name:
                      type: string
                      description: Name of the author
                      example: John Doe
                    email:
                      type: string
                      format: email
                      description: Email of the author
                      example: author@gmail.com
                    bio:
                      type: string
                      description: Bio of the author
                      example: This is a author
                    socialMedia:
                      type: object
                      description: Social media of the author
                      properties:
                        facebook:
                          type: string
                          description: Facebook link of the author
                          example: www.facebook.com/author
                vendorId:
                  type: string
                  description: Vendor id of the author
                  example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Blog created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Blog created successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the blog
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      title:
                        type: string
                        description: Title of the blog
                        example: Blog 1
                      bodyHtml:
                        type: string
                        description: Description of the blog
                        example: <h1>This is a blog</h1>
                      tags:
                        type: array
                        description: Tags of the blog
                        items:
                          type: string
                          example: 'tag1'
                      author:
                        type: object
                        description: Author of the blog
                        properties:
                          name:
                            type: string
                            description: Name of the author
                            example: John Doe
                          email:
                            type: string
                            format: email
                            description: Email of the author
                            example: author@gmail.com
                          bio:
                            type: string
                            description: Bio of the author
                            example: This is a author
                          socialMedia:
                            type: object
                            description: Social media of the author
                            properties:
                              facebook:
                                type: string
                                description: Facebook link of the author
                                example: www.facebook.com/author
                      vendorId:
                        type: string
                        description: Vendor id of the author
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      status:
                        type: string
                        description: Status of the author
                        example: active
                      publishedAt:
                        type: string
                        description: Published at of the author
                        example: 2021-09-01T00:00:00.000Z
                    required:
                      [
                        'title',
                        'bodyHtml',
                        'tags',
                        'author',
                        'vendorId',
                        'status',
                        'publishedAt',
                      ]
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  '/blogs/{id}':
    get:
      tags:
        - Blog
      security:
        - bearerAuth: []
      summary: Get a blog by id
      description: Get a blog by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the blog
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Blog found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Blog found successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the blog
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      title:
                        type: string
                        description: Title of the blog
                        example: Blog 1
                      bodyHtml:
                        type: string
                        description: Description of the blog
                        example: <h1>This is a blog</h1>
                      author:
                        type: object
                        description: Author of the blog
                        properties:
                          name:
                            type: string
                            description: Name of the author
                            example: John Doe
                          email:
                            type: string
                            format: email
                            description: Email of the author
                            example: author@gmail.com
                          bio:
                            type: string
                            description: Bio of the author
                            example: This is a author
                          socialMedia:
                            type: object
                            description: Social media of the author
                            properties:
                              facebook:
                                type: string
                                description: Facebook link of the author
                                example: www.facebook.com/author
                      vendorId:
                        type: string
                        description: Vendor id of the author
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      tags:
                        type: array
                        description: Tags of the blog
                        items:
                          type: string
                          example: 'tag1'
                      status:
                        type: string
                        description: Status of the author
                        example: active
                      videos:
                        type: array
                        description: Videos of the blog
                        items:
                          type: object
                          properties:
                            title:
                              type: string
                              description: Title of the video
                              example: Video 1
                            url:
                              type: string
                              description: Url of the video
                              example: www.youtube.com/video1
                      publishedAt:
                        type: string
                        description: Published at of the author
                        example: 2021-09-01T00:00:00.000Z

        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Blog
      security:
        - bearerAuth: []
      summary: Update a blog by id
      description: Update a blog by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the blog
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      requestBody:
        description: Blog update request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the blog
                  example: Blog 1
                bodyHtml:
                  type: string
                  description: Description of the blog
                  example: <h1>This is a blog</h1>
                author:
                  type: object
                  description: Author of the blog
                  properties:
                    name:
                      type: string
                      description: Name of the author
                      example: John Doe
                    email:
                      type: string
                      format: email
                      description: Email of the author
                      example: author@gmail.com
                    bio:
                      type: string
                      description: Bio of the author
                      example: This is a author
                    socialMedia:
                      type: object
                      description: Social media of the author
                      properties:
                        facebook:
                          type: string
                          description: Facebook link of the author
                          example: www.facebook.com/author
                tags:
                  type: array
                  description: Tags of the blog
                  items:
                    type: string
                    example: 'tag1'
                status:
                  type: string
                  description: Status of the author
                  example: active
                videos:
                  type: array
                  description: Videos of the blog
                  items:
                    type: string
                    example: www.youtube.com/video1

      responses:
        '200':
          description: Blog updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Blog updated successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the blog
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      title:
                        type: string
                        description: Title of the blog
                        example: Blog 1
                      bodyHtml:
                        type: string
                        description: Description of the blog
                        example: <h1>This is a blog</h1>
                      author:
                        type: object
                        description: Author of the blog
                        properties:
                          name:
                            type: string
                            description: Name of the author
                            example: John Doe
                          email:
                            type: string
                            format: email
                            description: Email of the author
                            example: author@gmail.com
                          bio:
                            type: string
                            description: Bio of the author
                            example: This is a author
                          socialMedia:
                            type: object
                            description: Social media of the author
                            properties:
                              facebook:
                                type: string
                                description: Facebook link of the author
                                example: www.facebook.com/author
                      tags:
                        type: array
                        description: Tags of the blog
                        items:
                          type: string
                          example: 'tag1'
                      status:
                        type: string
                        description: Status of the author
                        example: active
                      videos:
                        type: array
                        description: Videos of the blog
                        items:
                          type: string
                          example: www.youtube.com/video1
                      publishedAt:
                        type: string
                        description: Published at of the author
                        example: 2021-09-01T00:00:00.000Z
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Blog
      security:
        - bearerAuth: []
      summary: delete blog by id
      description: delete blog by id
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the blog
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Blog deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Blog deleted successfully
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  # Cart api start
  '/carts':
    post:
      tags:
        - Cart
      security:
        - bearerAuth: []
      summary: Create a new cart
      description: Create a new cart customer only
      requestBody:
        description: Cart creation request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: User id of the cart
                  example: 612f7b3b7b3b3b3b3b3b3b3b
                items:
                  type: array
                  description: Items of the cart
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        description: Product id of the item
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      quantity:
                        type: number
                        description: Quantity of the item
                        example: 1
                      total:
                        type: number
                        description: Price of the item
                        example: 100
                      varient:
                        type: number
                        description: Varient of the item
                        example: 1
      responses:
        '200':
          description: Cart created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Cart created successfully
                  data:
                    type: object
                    description: Data of the response
                    properties:
                      _id:
                        type: string
                        description: Id of the cart
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      userId:
                        type: string
                        description: User id of the cart
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      items:
                        type: array
                        description: Items of the cart
                        items:
                          type: object
                          properties:
                            productId:
                              type: object
                              properties:
                                _id:
                                  type: string
                                  description: Id of the product
                                  example: 612f7b3b7b3b3b3b3b3b3b3b
                                name:
                                  type: string
                                  description: Name of the product
                                  example: Product 1
                                price:
                                  type: number
                                  description: Price of the product
                                  example: 100
                                varients:
                                  type: array
                                  description: Varient of the product
                                  items:
                                    type: object
                                    properties:
                                      _id:
                                        type: string
                                        description: Id of the varient
                                        example: 612f7b3b7b3b3b3b3b3b3b3b
                                      name:
                                        type: string
                                        description: Name of the varient
                                        example: Varient 1
                                      price:
                                        type: number
                                        description: Price of the varient
                                        example: 100
                            quantity:
                              type: number
                              description: Quantity of the item
                              example: 1
                            total:
                              type: number
                              description: Price of the item
                              example: 100
                            varient:
                              type: number
                              description: Varient of the item
                              example: 1
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/carts/{userId}':
    get:
      tags:
        - Cart
      security:
        - bearerAuth: []
      summary: Get carts by ids
      description: Get carts by ids
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of the user
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Carts found successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Carts found successfully
                  data:
                    type: array
                    description: Data of the response
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Id of the cart
                          example: 612f7b3b7b3b3b3b3b3b3b3b
                        userId:
                          type: string
                          description: User id of the cart
                          example: 612f7b3b7b3b3b3b3b3b3b3b
                        items:
                          type: array
                          description: Items of the cart
                          items:
                            type: object
                            properties:
                              productId:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                    description: Id of the product
                                    example: 612f7b3b7b3b3b3b3b3b3b3b
                                  name:
                                    type: string
                                    description: Name of the product
                                    example: Product 1
                                  price:
                                    type: number
                                    description: Price of the product
                                    example: 100
                                  varients:
                                    type: array
                                    description: Varient of the product
                                    items:
                                      type: object
                                      properties:
                                        _id:
                                          type: string
                                          description: Id of the varient
                                          example: 612f7b3b7b3b3b3b3b3b3b3b
                                        name:
                                          type: string
                                          description: Name of the varient
                                          example: Varient 1
                                        price:
                                          type: number
                                          description: Price of the varient
                                          example: 100
                              quantity:
                                type: number
                                description: Quantity of the item
                                example: 1
                              total:
                                type: number
                                description: Price of the item
                                example: 100
                              varient:
                                type: number
                                description: Varient of the item
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  '/carts/{userId}/{cartId}':
    put:
      tags:
        - Cart
      security:
        - bearerAuth: []
      summary: Update user cart by id
      description: Update user cart by id
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of the user
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
        - name: cartId
          in: path
          required: true
          description: Id of the cart
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      requestBody:
        description: Cart update request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                items:
                  type: array
                  description: Items of the cart
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        description: Product id of the item
                        example: 612f7b3b7b3b3b3b3b3b3b3b
                      quantity:
                        type: number
                        description: Quantity of the item
                        example: 1
                      total:
                        type: number
                        description: Price of the item
                        example: 100
                      varient:
                        type: number
                        description: Varient of the item
                        example: 1
      responses:
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Cart
      security:
        - bearerAuth: []
      summary: Delete user cart by id
      description: Delete user cart by id
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of the user
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
        - name: cartId
          in: path
          required: true
          description: Id of the cart
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  '/cart/{userId}/clear':
    delete:
      tags:
        - Cart
      security:
        - bearerAuth: []
      summary: Clear user cart by user id
      description: Clear user cart by user id
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of the user
          schema:
            type: string
          example: 612f7b3b7b3b3b3b3b3b3b3b
      responses:
        '200':
          description: Cart cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    description: Status of the response
                    example: 200
                  message:
                    type: string
                    description: Message of the response
                    example: Cart cleared successfully
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  # Category api start
  '/categories':
    get:
      tags:
        - Category
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Category
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/categories/{name}':
    get:
      tags:
        - Category
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Category
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Category
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Collection api start
  '/collections':
    get:
      tags:
        - Collection
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Collection
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/collections/{name}':
    get:
      tags:
        - Collection
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Collection
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Collection
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Comment api start
  '/comments':
    post:
      tags:
        - Comment
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/comments/{articleId}':
    get:
      tags:
        - Comment
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/comments/{id}':
    put:
      tags:
        - Comment
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Comment
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Coupon api start
  '/coupons':
    post:
      tags:
        - Coupon
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Coupon
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/coupons/{id}':
    get:
      tags:
        - Coupon
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Coupon
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Coupon
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Customer api start
  '/customers/{id}':
    get:
      tags:
        - Customer
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Customer
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Customer
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Discount api start
  '/discounts':
    post:
      tags:
        - Discount
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Discount
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/discounts/{id}':
    get:
      tags:
        - Discount
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Discount
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Discount
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Order api start
  '/orders':
    post:
      tags:
        - Order
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Order
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/orders/{id}':
    get:
      tags:
        - Order
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Order
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Order
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/orders/{userId}':
    get:
      tags:
        - Order
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Product api start
  '/products':
    post:
      tags:
        - Product
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Product
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/product/{id}':
    get:
      tags:
        - Product
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Product
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Product
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/product/{merchantId}':
    get:
      tags:
        - Product
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Product api start
  '/reels':
    post:
      tags:
        - Reels
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/reels/{id}':
    get:
      tags:
        - Reels
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Reels
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Reels
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/reels/{merchantId}':
    get:
      tags:
        - Reels
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Comment api start
  '/reviews':
    post:
      tags:
        - Review
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/reviews/{productId}':
    get:
      tags:
        - Review
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/reviews/{id}':
    put:
      tags:
        - Review
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Review
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Transaction api start
  '/transactions':
    post:
      tags:
        - Transaction
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - Transaction
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/transactions/{userId}':
    get:
      tags:
        - Transaction
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/transactions/{id}':
    delete:
      tags:
        - Transaction
      summary: Get a merchant by id
      description: Get a merchant by id
      parameters: []
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  # Merchant api start
  '/merchants':
    get:
      tags:
        - Merchant
      summary: get all merchant admin
      description: this is description
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  '/merchants/{id}':
    get:
      tags:
        - Merchant
      summary: get all merchant admin
      description: this is description
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Merchant
      summary: get all merchant admin
      description: this is description
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - Merchant
      summary: get all merchant admin
      description: this is description
      responses:
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_id

  schemas:
    Admin:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            name:
              type: string
              example: John Doe
            email:
              type: string
              format: email
              example: johndoe@example.com
            photo:
              type: string
              example: https://awa.s3.amazonaws.com/2309dfs9fj4324dfd334.jpg
            password:
              type: string
              example: 3459&*$#JFJ
            role:
              type: string
              enum: [admin, superadmin]
              example: admin
            status:
              type: string
              enum: [active, inactive]
              example: active
            permissions:
              type: array
              items:
                type: string
              example: ['create', 'read', 'update', 'delete']
            lastLogin:
              type: string
              format: date-time
              example: 2021-09-01T12:00:00.000Z
          required:
            [
              _id,
              name,
              email,
              photo,
              password,
              role,
              status,
              permissions,
              lastLogin,
            ]
        - $ref: '#/components/schemas/Timestamp'
    Blog:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            post_id:
              type: string
              example: 2309dfs9fj4324dfd334
            title:
              type: string
              example: How to create a blog
              description: Title of the blog post
            body_html:
              type: string
              example: <p>This is a blog post</p>
              description: Body of the blog post in HTML format
            author_id:
              type: string
              example: 2309dfs9fj4324dfd334
            vendor_id:
              type: string
              example: 2309dfs9fj4324dfd334
            tags:
              type: array
              items:
                type: string
              example: ['blog', 'how-to']
            status:
              type: string
              enum: [draft, published, archived, deleted, pending]
              example: published
            vidoes:
              type: array
              items:
                type: string
              example: ['https://awa.s3.amazonaws.com/2309dfs9fj4324dfd334.mp4']
            publishedAt:
              type: string
              format: date-time
              example: 2021-09-01T12:00:00.000Z
          required:
            [
              _id,
              post_id,
              title,
              body_html,
              author_id,
              vendor_id,
              tags,
              status,
              vidoes,
              publishedAt,
            ]
        - $ref: '#/components/schemas/Timestamp'
    Cart:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            customer_id:
              type: string
              example: 2309dfs9fj4324dfd334
            items:
              type: array
              items:
                type: object
                properties:
                  product_id:
                    type: string
                    example: 2309dfs9fj4324dfd334
                  quantity:
                    type: number
                    format: int32
                    example: 2
                  total:
                    type: number
                    format: int32
                    example: 180
                  option:
                    type: object
                    properties:
                      size:
                        type: string
                        example: M
                      color:
                        type: string
                        example: Red
                    required: [size, color]
            total:
              type: number
              format: int32
              example: 1324
          required: [_id, customer_id, items, total]
        - $ref: '#/components/schemas/Timestamp'
    Category:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            name:
              type: string
              example: Electronics
            subcategory:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: Mobile
                  parentCategoryId:
                    type: string
                    example: 2309dfs9fj4324dfd334
                  status:
                    type: string
                    enum: [active, inactive]
                    example: active
                required: [name, parentCategoryId, status]
            status:
              type: string
              enum: [active, inactive]
              example: active
          required: [_id, name, subcategory, status]
        - $ref: '#/components/schemas/Timestamp'
    Collection:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            name:
              type: string
              example: Summer Collection
            products:
              type: array
              items:
                type: string
                example: 2309dfs9fj4324dfd334
            status:
              type: string
              enum: [active, inactive]
              example: active
          required: [_id, name, products, status]
        - $ref: '#/components/schemas/Timestamp'
    Comment:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            blog_id:
              type: string
              example: 2309dfs9fj4324dfd334
            author_id:
              type: string
              example: 2309dfs9fj4324dfd334
            body:
              type: string
              example: This is a comment
            status:
              type: string
              enum: [active, inactive]
              example: active
          required: [_id, blog_id, author_id, body, status]
        - $ref: '#/components/schemas/Timestamp'
    Coupon:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            code:
              type: string
              example: 2309dfs9fj4324dfd334
            discount:
              type: number
              format: int32
              example: 20
            startAt:
              type: string
              format: date-time
              example: 2021-09-01T12:00:00.000Z
            endAt:
              type: string
              format: date-time
              example: 2021-09-01T12:00:00.000Z
            status:
              type: string
              enum: [active, inactive]
              example: active
            usageLimit:
              type: number
              format: int32
              example: 10
            description:
              type: string
              example: This is a coupon for summer.
          required: [_id, code, discount, startAt, endAt, status, usageLimit]
        - $ref: '#/components/schemas/Timestamp'
    Customer:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            name:
              type: string
              example: John Doe
            email:
              type: string
              format: email
              example: customermail@email.com
            photo:
              type: string
              example: https://awa.s3.amazonaws.com/2309dfs9fj4324dfd334.jpg
            password:
              type: string
              example: 3459&*$#JFJ
            varified_email:
              type: boolean
              example: true
            status:
              type: string
              enum: [active, inactive]
              example: active
            addresses:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                    example: 2309dfs9fj4324dfd334
                  address1:
                    type: string
                    example: 1234, ABC Street
                  address2:
                    type: string
                    example: 1234, XYZ Street
                  city:
                    type: string
                    example: Dhaka
                  district:
                    type: string
                    example: Dhaka
                  zip:
                    type: string
                    example: 1200
                  phone:
                    type: string
                    example: 1234567890
                  type:
                    type: string
                    enum: [home, shipping]
                    example: home
                required: [address1, city, district, zip, phone, type]
            last_order_id:
              type: string
              example: 2309dfs9fj4324dfd334
            note:
              type: array
              items:
                type: string
              example: ['This is a note', 'Frequency of purchase is high']
            orders_count:
              type: number
              format: int32
              example: 10
            points:
              type: number
              format: int32
              example: 100
            pointsAmount:
              type: number
              format: int32
              example: 1000
            tags:
              type: array
              items:
                type: string
              example: ['tag1', 'tag2']
            total_spent:
              type: number
              format: int32
              example: 10000
          required:
            [
              _id,
              name,
              email,
              photo,
              password,
              varified_email,
              status,
              addresses,
              last_order_id,
              note,
              orders_count,
              points,
              pointsAmount,
              tags,
              total_spent,
            ]
        - $ref: '#/components/schemas/Timestamp'
    Discount:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            type:
              type: string
              enum: [percentage, fixed, buy_one_get_one, free_shipping, coupon]
              example: buy_one_get_one
            discount:
              type: number
              format: int32
              example: 20
            startAt:
              type: string
              format: date-time
              example: 2021-09-01T12:00:00.000Z
            endAt:
              type: string
              format: date-time
              example: 2021-09-01T12:00:00.000Z
            status:
              type: string
              enum: [active, inactive]
              example: active
            usageLimit:
              type: number
              format: int32
              example: 10
            min_purchase:
              type: number
              format: int32
              example: 100
            description:
              type: string
              example: This is a discount for summer.
          required: [_id, type, discount, startAt, endAt, status]
        - $ref: '#/components/schemas/Timestamp'
    Order:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            customer_id:
              type: string
              example: 2309dfs9fj4324dfd334
            name:
              type: string
              example: John Doe
            email:
              type: string
              format: email
              example: customeremail@gmail.com
            phone:
              type: string
              example: 1234567890
            billing_address:
              type: object
              properties:
                _id:
                  type: string
                  example: 2309dfs9fj4324dfd334
                name:
                  type: string
                  example: John Doe
                phone:
                  type: string
                  example: 1234567890
                email:
                  type: string
                  format: email
                  example: email@gmail.com
                address1:
                  type: string
                  example: 1234, ABC Street
                address2:
                  type: string
                  example: 1234, XYZ Street
                city:
                  type: string
                  example: Dhaka
                district:
                  type: string
                  example: Dhaka
                zip:
                  type: string
                  example: 1200
                type:
                  type: string
                  enum: [home, shipping]
                  example: home
              required:
                [name, phone, email, address1, city, district, zip, type]
            shipping_address:
              type: object
              properties:
                _id:
                  type: string
                  example: 2309dfs9fj4324dfd334
                name:
                  type: string
                  example: John Doe
                phone:
                  type: string
                  example: 1234567890
                email:
                  type: string
                  format: email
                  example: email@gmail.com
                address1:
                  type: string
                  example: 1234, ABC Street
                address2:
                  type: string
                  example: 1234, XYZ Street
                city:
                  type: string
                  example: Dhaka
                district:
                  type: string
                  example: Dhaka
                zip:
                  type: string
                  example: 1200
                type:
                  type: string
                  enum: [home, shipping]
                  example: home
              required:
                [name, phone, email, address1, city, district, zip, type]
            line_items:
              type: array
              items:
                type: object
                properties:
                  _id:
                    type: string
                    example: 2309dfs9fj4324dfd334
                  product_id:
                    type: string
                    example: 2309dfs9fj4324dfd334
                  variant_id:
                    type: string
                    example: 2309dfs9fj4324dfd334
                  title:
                    type: string
                    example: Product Title
                  price:
                    type: number
                    format: int32
                    example: 100
                  quantity:
                    type: number
                    format: int32
                    example: 2
                  total:
                    type: number
                    format: int32
                    example: 200
                  size:
                    type: string
                    example: M
                  color:
                    type: string
                    example: Red
                  sku:
                    type: string
                    example: 2309dfs9fj4324dfd334
                  image:
                    type: string
                    example: https://awa.s3.amazonaws.com/2309dfs9fj4324dfd334.jpg
                  discount:
                    type: number
                    format: int32
                    example: 20
                required:
                  [
                    _id,
                    product_id,
                    variant_id,
                    title,
                    price,
                    quantity,
                    total,
                    size,
                    color,
                    sku,
                    image,
                    discount,
                  ]
            total_price:
              type: number
              format: int32
              example: 200
            total_discount:
              type: number
              format: int32
              example: 20
            payment_gateway:
              type: string
              enum: [cod, card, bkash, rocket, nagad]
              example: cod
            cancel_reason:
              type: string
              example: Customer changed mind
            order_number:
              type: string
              example: 2309dfs9fj4324dfd334
            fullfillment_by:
              type: string
              enum: [gsmart, vendor]
              example: vendor
            tags:
              type: array
              items:
                type: string
              example: ['tag1', 'tag2']
            notes:
              type: array
              items:
                type: string
              example: ['note1', 'note2']
            status:
              type: string
              enum:
                [
                  pending,
                  confirmed,
                  shipped,
                  delivered,
                  cancelled,
                  refunded,
                  returned,
                  disputed,
                  onhold,
                ]
              example: pending
          required:
            [
              _id,
              customer_id,
              name,
              email,
              phone,
              billing_address,
              shipping_address,
              line_items,
              total_price,
              total_discount,
              payment_gateway,
              order_number,
              fullfillment_by,
              tags,
              notes,
              status,
            ]
        - $ref: '#/components/schemas/Timestamp'
    Reels:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            vendor_id:
              type: string
              example: 2309dfs9fj4324dfd334
            title:
              type: string
              example: Summer Collection
            reelLink:
              type: string
              format: uri
              example: https://awa.s3.amazonaws.com/2309
            likes:
              type: number
              format: int32
              example: 100
            tags:
              type: array
              items:
                type: string
              example: ['tag1', 'tag2']
            status:
              type: string
              enum: [active, inactive]
              example: active
          required: [_id, vendor_id, title, reelLink, likes, tags, status]
        - $ref: '#/components/schemas/Timestamp'
    Review:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            review_type:
              type: string
              enum: [product, vendor]
              example: product
            type_id:
              type: string
              example: 2309dfs9fj4324dfd334
            customer_id:
              type: string
              example: 2309dfs9fj4324dfd334
            rating:
              type: number
              format: int32
              example: 5
            text:
              type: string
              example: This is a review
          required: [_id, review_type, type_id, customer_id, rating, text]
        - $ref: '#/components/schemas/Timestamp'
    Transaction:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            customer_id:
              type: string
              example: 2309dfs9fj4324dfd334
            order_id:
              type: string
              example: 2309dfs9fj4324dfd334
            amount:
              type: number
              format: int32
              example: 100
            payment_gateway:
              type: string
              enum: [cod, card, bkash, rocket, nagad]
              example: cod
            payment_gateway_details:
              type: object
              properties:
                transaction_id:
                  type: string
                  example: 2309dfs9fj4324dfd334
                payment_id:
                  type: string
                  example: 2309dfs9fj4324dfd334
              required: [transaction_id, payment_id]
            status:
              type: string
              enum: [pending, success, failed]
              example: success
            note:
              type: string
              example: This is a transaction
          required:
            [
              _id,
              customer_id,
              order_id,
              amount,
              payment_gateway,
              payment_gateway_details,
              status,
            ]
        - $ref: '#/components/schemas/Timestamp'
    Timestamp:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required: [createdAt, updatedAt]
    Merchant:
      allOf:
        - type: object
          properties:
            _id:
              type: string
              example: 2309dfs9fj4324dfd334
            name:
              type: string
              example: John Doe
            email:
              type: string
              format: email
              example: vendoremail@gmail.com
            password:
              type: string
              example: 3459&*$#JFJ
            phone:
              type: string
              example: 1234567890
            photo:
              type: string
              example: https://awa.s3.amazonaws.com/2309dfs9fj4324dfd334.jpg
            status:
              type: string
              enum: [active, inactive]
              example: active
            rating:
              type: number
              format: int32
              example: 5
            products:
              type: array
              items:
                type: string
              example: ['2309dfs9fj4324dfd334']
            address: {}
            website:
              type: string
              example: https://awa.com
            description:
              type: string
              example: This is a vendor
            social_links:
              type: object
              properties:
                facebook:
                  type: string
                  format: uri
                  example: https://facebook.com/awa
                twitter:
                  type: string
                  example: https://twitter.com/awa
                instagram:
                  type: string
                  example: https://instagram.com/awa
                linkedin:
                  type: string
                  example: https://linkedin.com/awa
                youtube:
                  type: string
                  example: https://youtube.com/awa
              required: [facebook]
            tags:
              type: array
              items:
                type: string
              example: ['tag1', 'tag2']
            notes:
              type: array
              items:
                type: string
              example: ['note1', 'note2']
            verification_info:
              type: object
              properties:
                national_id:
                  type: string
                  example: 2309dfs9fj4324dfd334
                business_license:
                  type: string
                  example: 2309dfs9fj4324dfd334
                trade_license:
                  type: string
                  example: 2309dfs9fj4324dfd334
              required: [national_id, business_license, trade_license]
            reviews:
              type: array
              items:
                type: string
              example: ['2309dfs9fj4324dfd334']
          required:
            [
              _id,
              name,
              email,
              password,
              phone,
              photo,
              status,
              rating,
              products,
              address,
              website,
              description,
              social_links,
              tags,
              notes,
              verification_info,
              reviews,
            ]
        - $ref: '#/components/schemas/Timestamp'
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 400
              errors:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: email
                    message:
                      type: string
                      example: Email is required
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 401
              message:
                type: string
                example: Unauthorized
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 403
              message:
                type: string
                example: Forbidden access
    '404':
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 404
              error:
                type: string
                example: Resources Not found
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 500
              error:
                type: string
                example: Internal server error

  parameters: {}
